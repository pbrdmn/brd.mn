<feed xmlns="http://www.w3.org/2005/Atom">
  <title>brd.mn</title>
  <subtitle>Interested in how things work; breaking things and fixing things</subtitle>
  <link href="https://brd.mn/rss.xml" rel="self">
  <link href="https://brd.mn/">
  <updated>2023-03-29T00:00:00Z</updated>
  <id>https://brd.mn/</id>
  <author>
    <name>Philip Boardman</name>
    <email>rss@brd.mn</email>
  </author>
    
    <entry>
      <title>Twilio Verify Rate Limiting</title>
      <link href="https://brd.mn/articles/twilio-verify-rate-limit/">
      <updated>2023-03-29T00:00:00Z</updated>
      <id>https://brd.mn/articles/twilio-verify-rate-limit/</id>
      <content type="html">
        &lt;p&gt;&lt;img src=&quot;https://brd.mn/articles/twilio-verify-rate-limit/joshua-hoehne-TsdelDFTP6Y-unsplash.jpg&quot; alt=&quot;Speed limit sign&quot; /&gt;&lt;/p&gt;
        &lt;p&gt;Twilio &lt;code&gt;rate limits&lt;/code&gt; are used to apply limits to a category of requests.&lt;/p&gt;
&lt;h2&gt;Twilio Client Auth&lt;/h2&gt;
&lt;p&gt;Before interacting with the Twilio API, you will need to require the &lt;code&gt;twilio-ruby&lt;/code&gt; gem and instantiate a &lt;code&gt;@client&lt;/code&gt; using your account credentials.&lt;/p&gt;
&lt;pre class=&quot;language-ruby&quot;&gt;&lt;code class=&quot;language-ruby&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;token string-literal&quot;&gt;&lt;span class=&quot;token string&quot;&gt;&#39;twilio-ruby&#39;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;account_sid &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string-literal&quot;&gt;&lt;span class=&quot;token string&quot;&gt;&#39;TWILIO_ACCOUNT_SID&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;auth_token &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string-literal&quot;&gt;&lt;span class=&quot;token string&quot;&gt;&#39;TWILIO_AUTH_TOKEN&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token variable&quot;&gt;@client&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Twilio&lt;span class=&quot;token double-colon punctuation&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;REST&lt;/span&gt;&lt;span class=&quot;token double-colon punctuation&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Client&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;account_sid&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; auth_token&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;h2&gt;Creating Rate Limits&lt;/h2&gt;
&lt;p&gt;A rate limit is created with a &lt;code&gt;unique_name&lt;/code&gt; (such as &lt;code&gt;&amp;quot;account_rate_limit&amp;quot;&lt;/code&gt;) and this unique name is used to reference the &lt;code&gt;rate limit&lt;/code&gt; later.&lt;/p&gt;
&lt;pre class=&quot;language-ruby&quot;&gt;&lt;code class=&quot;language-ruby&quot;&gt;rate_limit &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;@client&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;verify&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;v2&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;services&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;service_sid&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;rate_limits&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;create&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token symbol&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string-literal&quot;&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Account rate limit&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token symbol&quot;&gt;unique_name&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string-literal&quot;&gt;&lt;span class=&quot;token string&quot;&gt;&#39;account_rate_limit&#39;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;puts &lt;span class=&quot;token string-literal&quot;&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Created Rate Limit&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;puts rate_limit&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;sid&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Within each &lt;code&gt;rate limit&lt;/code&gt; category, limits are applied using &lt;code&gt;buckets&lt;/code&gt;.
A &lt;code&gt;bucket&lt;/code&gt; is created to set a maximum number of requests over a period, using the format &lt;code&gt;{ max: N, period: S }&lt;/code&gt; for &lt;code&gt;N&lt;/code&gt; maximum requests over a period of &lt;code&gt;S&lt;/code&gt; seconds.
Multiple rate limit &lt;code&gt;buckets&lt;/code&gt; can be created for a &lt;code&gt;rate limit&lt;/code&gt; which would each be applied to the requests within this &lt;code&gt;rate limit&lt;/code&gt; group.&lt;/p&gt;
&lt;pre class=&quot;language-ruby&quot;&gt;&lt;code class=&quot;language-ruby&quot;&gt;bucket &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;@client&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;verify&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;v2&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;services&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;service_sid&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;rate_limits&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;rate_limit&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;sid&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;buckets&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;create&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token symbol&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token symbol&quot;&gt;interval&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;600&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;# 10 minutes&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;puts &lt;span class=&quot;token string-literal&quot;&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Created Rate Limit Bucket&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;puts bucket&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;sid&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;Without creating a &lt;code&gt;bucket&lt;/code&gt;, no rate limiting will be applied to the &lt;code&gt;rate limit&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;h2&gt;Using Rate Limits&lt;/h2&gt;
&lt;p&gt;After a &lt;code&gt;rate limit&lt;/code&gt; with zero or more &lt;code&gt;buckets&lt;/code&gt; has been configured, requests will need to be associated with this &lt;code&gt;rate limit&lt;/code&gt; when they are being created. The &lt;code&gt;rate limit&lt;/code&gt; is referenced using the &lt;code&gt;unique_name&lt;/code&gt; and a &lt;code&gt;rate limit key&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&quot;language-ruby&quot;&gt;&lt;code class=&quot;language-ruby&quot;&gt;verification &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;@client&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;verify&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;v2&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;services&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;service_sid&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;verifications&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;create&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token symbol&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; user&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;mobile&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token symbol&quot;&gt;channel&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string-literal&quot;&gt;&lt;span class=&quot;token string&quot;&gt;&#39;sms&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token symbol&quot;&gt;rate_limits&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token symbol&quot;&gt;unique_name&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; rate_limit_key&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;rate limit key&lt;/code&gt; should be a unique identifier on which the rate limit bucket rules should apply.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Multiple rate limits could also be applied to a request, such as per account, per country, or per group of digits within the recipient&#39;s mobile number.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class=&quot;language-ruby&quot;&gt;&lt;code class=&quot;language-ruby&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;create&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token symbol&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; user&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;mobile&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token symbol&quot;&gt;channel&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string-literal&quot;&gt;&lt;span class=&quot;token string&quot;&gt;&#39;sms&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token symbol&quot;&gt;rate_limits&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token symbol&quot;&gt;account_rate_limit&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; user&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token symbol&quot;&gt;country_rate_limit&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; user&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;country&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;# trim last 3 digits to get a block of phone numbers&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token symbol&quot;&gt;number_group&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; number_group&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;user&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;mobile&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Rate Limit Error Codes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;If a &lt;code&gt;unique_name&lt;/code&gt; rate limit has not been correctly configured, the API will respond with a &lt;strong&gt;60200&lt;/strong&gt; error.&lt;/li&gt;
&lt;li&gt;If a request has been blocked by the &lt;code&gt;buckets&lt;/code&gt; within a &lt;code&gt;rate limit&lt;/code&gt;, the API will respond with a &lt;strong&gt;20429&lt;/strong&gt; error.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;p&gt;Check the docs&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.twilio.com/docs/verify/api/service-rate-limits&quot;&gt;Service Rate Limits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.twilio.com/docs/verify/api/service-rate-limit-buckets&quot;&gt;Service Rate Limit Buckets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.twilio.com/docs/verify/api/verification#start-new-verification&quot;&gt;Create a verification&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        </content>
    </entry>
    
    <entry>
      <title>Floating Point Arithmetic and Why It Makes Cents</title>
      <link href="https://brd.mn/articles/floating-point/">
      <updated>2023-03-15T00:00:00Z</updated>
      <id>https://brd.mn/articles/floating-point/</id>
      <content type="html">
        &lt;p&gt;&lt;img src=&quot;https://brd.mn/articles/floating-point/andrew-spencer-eY7ioRbk2sY-unsplash.jpg&quot; alt=&quot;A person in silhouette appears to be floating above the ground&quot; /&gt;&lt;/p&gt;
        &lt;p&gt;With the current headlines being dominated by the collapse of the Silicon Valley Bank, it seems apt to share this recent coding mistake I made with floating point numbers. My mistake did not cause and was not caused by the SVB collapse, but it occurred due to some work being done as a result of needing to modify systems that were previously built to use SVB.&lt;/p&gt;
&lt;p&gt;As with many companies, we were regularly processing transactions through Silicon Valley Bank. We needed to quickly adjust our process to allow us to send the transfer through a different financial institution. Rather than taking the long route and modifying our whole payment process, I proposed to write a conversion script to run on the files generated by the existing system, as this would be quicker to implement, be lower risk for delivery, and have less chance of introducing new problems into the system, which has mostly been working well for years.&lt;/p&gt;
&lt;p&gt;The setup for this file conversion is relatively standard as far as financial transfer files go. Ready through a 30-40 page PDF that outlines file structure and naming, which fields are required and the length and contents of each. Mostly boring details which are tedious, but important to get correct or the bank&#39;s system will reject the whole file and often not provide any useful error. As far as &lt;a href=&quot;https://martinfowler.com/articles/developer-effectiveness.html&quot;&gt;development cycles&lt;/a&gt;, it would be quite painful if we needed several iterations to diagnose and resolve an issue.&lt;/p&gt;
&lt;p&gt;However, all of that boring stuff turned out to be straightforward, and after we discovered a particular naming convention we needed to follow, the converted files worked the first time.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The most pertinent detail in all of this was that our input file stored transaction values in decimal such as &lt;code&gt;40.62&lt;/code&gt; where the new format used integers to store this same value in &amp;quot;cents&amp;quot; as &lt;code&gt;4062&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;h2&gt;Enter the bug&lt;/h2&gt;
&lt;p&gt;We had run several tests using previous transaction files to ensure our script would generate files acceptable for the bank&#39;s systems to ingest and process and were feeling confident. However when we ran the conversion of the live data for payments, it was noted that there was a discrepancy in the total payment amounts.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The payment file included several hundred thousand dollars of transactions, but was short by $3.89.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;h2&gt;Diagnosing the issue&lt;/h2&gt;
&lt;p&gt;Fortunately, I had also spent a few minutes writing a script to convert back while writing the conversion script. Doing this allowed me to diff the input file with a like-for-like display of what was included in the output file. This quickly highlighted where the problem was, which was everywhere, and what the problem was.&lt;/p&gt;
&lt;p&gt;In the diff, this showed that the input value of &lt;code&gt;40.62&lt;/code&gt; had been converted to &lt;code&gt;40.61&lt;/code&gt;. For exactly 389 transactions recorded in the payment file, the amount to be transferred was off by one cent ($0.01). This quickly triggered memories of floating point errors, with the popular claim that such and such programming language is bad because&lt;/p&gt;
&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token number&quot;&gt;0.1&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0.2&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0.3&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// false&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token number&quot;&gt;0.1&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0.3&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// 0.30000000000000004&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Floating point arithmetic&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Floating point errors can occur when computers represent real numbers with a finite number of bits. This can result in rounding errors and inaccuracies in calculations. While these errors may seem small, they can accumulate over time and lead to significant discrepancies in the final results.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Knowing what the problem was made it easy to pinpoint the line of software at fault. This line of code was able to correctly convert the dollar amount to cents &lt;em&gt;most&lt;/em&gt; of the time. But had some cases like in the above, where the floating point representation of a number became &amp;quot;almost correct&amp;quot;.&lt;/p&gt;
&lt;pre class=&quot;language-ruby&quot;&gt;&lt;code class=&quot;language-ruby&quot;&gt;amount_in_cents &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;amount&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;to_f &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;to_i&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &#39;to_i&#39; method in Ruby is used to convert the result of the mathematical operation &#39;amount.to_f * 100&#39; to an integer. Which was the source of the problem, as sometimes this would result in a number &lt;em&gt;just a little&lt;/em&gt; larger or smaller than the expected result. For numbers which were a little &lt;em&gt;larger&lt;/em&gt;, the &lt;code&gt;to_i&lt;/code&gt; function would truncate these, effectively rounding them down with worked in our favour. However for the numbers which were a little &lt;em&gt;smaller&lt;/em&gt;, the &lt;code&gt;to_i&lt;/code&gt; function would round them down a whole unit, so &lt;code&gt;40.62&lt;/code&gt; would be converted to &lt;code&gt;4601&lt;/code&gt;.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;The fix is in&lt;/h2&gt;
&lt;p&gt;To resolve this issue, we needed to explicitly round the result to the nearest integer, rather than truncating the number, which is accomplished in Ruby using the &lt;code&gt;.round&lt;/code&gt; method.&lt;/p&gt;
&lt;pre class=&quot;language-ruby&quot;&gt;&lt;code class=&quot;language-ruby&quot;&gt;amount_in_cents &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;amount&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;to_f &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;round&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And then, after adding some tests to ensure these cases would forever be covered, a new file was generated and sent to the finance team for processing. The team checked the numbers and confirmed that everything added up.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;A better solution&lt;/h2&gt;
&lt;p&gt;After some further research, it appears that Ruby provides a standard library for &lt;a href=&quot;https://ruby-doc.org/stdlib-3.1.0/libdoc/bigdecimal/rdoc/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt;, which is actually the appropriate solution to use in this case. By casting our &lt;code&gt;amount&lt;/code&gt; to a &lt;code&gt;BigDecimal&lt;/code&gt; we can then apply our calculation of &lt;code&gt;* 100&lt;/code&gt; without losing precision.&lt;/p&gt;
&lt;pre class=&quot;language-ruby&quot;&gt;&lt;code class=&quot;language-ruby&quot;&gt;amount_in_cents &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;BigDecimal&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;amount&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;to_i&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And as we have previously written unit tests covering these cases, we can be confident with our change.&lt;/p&gt;

        </content>
    </entry>
    
    <entry>
      <title>Writing Code with AI Examples</title>
      <link href="https://brd.mn/articles/ai-writing-code/">
      <updated>2023-03-10T00:00:00Z</updated>
      <id>https://brd.mn/articles/ai-writing-code/</id>
      <content type="html">
        &lt;p&gt;&lt;img src=&quot;https://brd.mn/articles/ai-writing-code/stephen-dawson-qwtCeJ5cLYs-unsplash.jpg&quot; alt=&quot;Screen with charts and numbers&quot; /&gt;&lt;/p&gt;
        &lt;p&gt;Having a conversation with ChatGPT can be fun, but it will quite often tell you confidently something you know to be gibberish. This means when it comes to writing software, it could provide something that &lt;em&gt;looks&lt;/em&gt; reasonable, but fails horribly.&lt;/p&gt;
&lt;p&gt;In preparation for a task, I decided to see what opportunity AI would provide in assistance by asking &amp;quot;How would I convert a SVB formatted payment file to ACH&amp;quot;.&lt;/p&gt;
&lt;p&gt;To which ChatGPT responded with it&#39;s usual confidence and structure&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To convert a SVB formatted payment file to ACH, you will need to perform the following steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Obtain the necessary information from the SVB payment file. This may include the company name, account number, routing number, and transaction amount.&lt;/li&gt;
&lt;li&gt;Format the information according to the ACH standard. ACH uses a specific file format, which includes a header record, detail records, and a trailer record. You will need to format the information from the SVB payment file into this structure.&lt;/li&gt;
&lt;li&gt;Convert the routing number. SVB uses a different routing number format than ACH, so you will need to convert the routing number to the ACH format. This typically involves adding a leading zero and removing the check digit.&lt;/li&gt;
&lt;li&gt;Validate the ACH file. Before submitting the ACH file, you will need to validate it to ensure that it meets the ACH standard. This typically involves using a validation tool to check for errors and ensure that the file contains all the required information.&lt;/li&gt;
&lt;li&gt;Submit the ACH file. Once the ACH file has been validated, you can submit it to the appropriate financial institution for processing.
It is important to note that the specific steps and requirements for converting a SVB formatted payment file to ACH may vary depending on the financial institution and payment system being used. It is recommended that you consult with a financial professional or your bank for guidance on the specific process and requirements for your situation.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;But when I asked a follow up question of &amp;quot;Can you give me some example code in Ruby?&amp;quot;, I was able to see some example code which &lt;em&gt;looked&lt;/em&gt; like it might help solve the problem.&lt;/p&gt;
&lt;pre class=&quot;language-ruby&quot;&gt;&lt;code class=&quot;language-ruby&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;token string-literal&quot;&gt;&lt;span class=&quot;token string&quot;&gt;&#39;csv&#39;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# Define the path to the SVB payment file&lt;/span&gt;&lt;br /&gt;svb_file_path &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string-literal&quot;&gt;&lt;span class=&quot;token string&quot;&gt;&#39;/path/to/svb/payment/file.csv&#39;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# Define the path to the output ACH file&lt;/span&gt;&lt;br /&gt;ach_file_path &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string-literal&quot;&gt;&lt;span class=&quot;token string&quot;&gt;&#39;/path/to/output/ach/file.txt&#39;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# Define the ACH routing number format&lt;/span&gt;&lt;br /&gt;ach_routing_number_format &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string-literal&quot;&gt;&lt;span class=&quot;token string&quot;&gt;&#39;0%08d&#39;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# Define the ACH file header and trailer records&lt;/span&gt;&lt;br /&gt;ach_header_record &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string-literal&quot;&gt;&lt;span class=&quot;token string&quot;&gt;&#39;101 012345678 012345678 2001010101A094101YourCompany           &#39;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;ach_trailer_record &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string-literal&quot;&gt;&lt;span class=&quot;token string&quot;&gt;&#39;901000100000001000000000000000000000000000000000000000000000000000000000000000&#39;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# Open the SVB payment file and read its contents&lt;/span&gt;&lt;br /&gt;svb_file &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;CSV&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;read&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;svb_file_path&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# Initialize an empty array to store the ACH payment records&lt;/span&gt;&lt;br /&gt;ach_records &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# Loop through each payment record in the SVB file&lt;/span&gt;&lt;br /&gt;svb_file&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;record&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;# Extract the necessary information from the SVB payment record&lt;/span&gt;&lt;br /&gt;  account_number &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; record&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;  routing_number &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; record&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;  transaction_amount &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; record&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;# Convert the routing number to the ACH format&lt;/span&gt;&lt;br /&gt;  ach_routing_number &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; sprintf&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ach_routing_number_format&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; routing_number&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;# Format the payment record according to the ACH standard&lt;/span&gt;&lt;br /&gt;  ach_record &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string-literal&quot;&gt;&lt;span class=&quot;token string&quot;&gt;&quot;5200&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token delimiter punctuation&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;token content&quot;&gt;ach_routing_number&lt;/span&gt;&lt;span class=&quot;token delimiter punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token delimiter punctuation&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;token content&quot;&gt;account_number&lt;/span&gt;&lt;span class=&quot;token delimiter punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;   27              &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token delimiter punctuation&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;token content&quot;&gt;transaction_amount&lt;/span&gt;&lt;span class=&quot;token delimiter punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;0000000000000&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token delimiter punctuation&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;token content&quot;&gt;transaction_amount&lt;/span&gt;&lt;span class=&quot;token delimiter punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;0000000000000YourCompany           0000000000000000000000000&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;# Add the payment record to the array of ACH payment records&lt;/span&gt;&lt;br /&gt;  ach_records &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; ach_record&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;end&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# Combine the ACH header record, payment records, and trailer record into a single string&lt;/span&gt;&lt;br /&gt;ach_file_contents &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string-literal&quot;&gt;&lt;span class=&quot;token string&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token delimiter punctuation&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;token content&quot;&gt;ach_header_record&lt;/span&gt;&lt;span class=&quot;token delimiter punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token delimiter punctuation&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;token content&quot;&gt;ach_records&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;join&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string-literal&quot;&gt;&lt;span class=&quot;token string&quot;&gt;&quot;\n&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token delimiter punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token delimiter punctuation&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;token content&quot;&gt;ach_trailer_record&lt;/span&gt;&lt;span class=&quot;token delimiter punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# Write the ACH file to disk&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token builtin&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;write&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ach_file_path&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; ach_file_contents&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now hopefully you would simply run this script blindly, just like you wouldn&#39;t want to copy and paste from &lt;a href=&quot;https://stackoverflow.com/&quot;&gt;StackOverflow&lt;/a&gt;, but it has done the legwork of file structuring and scaffolding to allow us to focus on the details.&lt;/p&gt;

        </content>
    </entry>
    
    <entry>
      <title>Displaying Relative Time for a Static Site</title>
      <link href="https://brd.mn/articles/timeago-js/">
      <updated>2023-03-09T00:00:00Z</updated>
      <id>https://brd.mn/articles/timeago-js/</id>
      <content type="html">
        &lt;p&gt;&lt;img src=&quot;https://brd.mn/articles/timeago-js/age-barros-rBPOfVqROzY-unsplash.jpg&quot; alt=&quot;Watch face with complications showing the time&quot; /&gt;&lt;/p&gt;
        &lt;p&gt;Recently I was looking to make the article dates a little simpler to see how recently they had been written. Rather than looking at timestamp or date, I wanted to see now many days, months, or years ago an article was. This looked like relatively simple problem to tackle and I could have imported an &lt;code&gt;npm&lt;/code&gt; package and been done with it, but where is the fun in that?&lt;/p&gt;
&lt;p&gt;Instead I began writing a function which calculated the difference between two javascript &lt;code&gt;Date()&lt;/code&gt; objects, which would then by transformed into some discrete time periods with the power of &lt;strong&gt;math&lt;/strong&gt;, then display the largest useful time period in the format of &lt;code&gt;{X} {periods} ago&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Calculating the Relative Time&lt;/h2&gt;
&lt;p&gt;Calculating the time difference between the two instances of the &lt;code&gt;Date()&lt;/code&gt; class by subtraction gives a difference in milliseconds (&lt;code&gt;ms&lt;/code&gt; below). This is converted to &lt;code&gt;days&lt;/code&gt; by dividing by the number of milliseconds per day, then transformed to values for &lt;code&gt;months&lt;/code&gt; and &lt;code&gt;years&lt;/code&gt; by dividing &lt;code&gt;days&lt;/code&gt; by &lt;code&gt;30&lt;/code&gt; and &lt;code&gt;365&lt;/code&gt; respectively.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; now &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; ms &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; now &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; dateObj&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; days &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ceil&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ms &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;86400000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; months &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;days &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; years &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;months &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once we have calculated each of the time periods we are interested in, we can &lt;code&gt;switch&lt;/code&gt; between which time period to display and return a formatted string showing a human-readable time difference between the two dates given.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;years &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;years&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; years ago&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;months &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;months&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; months ago&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;days&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; days ago&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With this in place, we can now calculate how old a date is in days, months, and years. In our &lt;code&gt;switch&lt;/code&gt; statement, we are checking that &lt;code&gt;years&lt;/code&gt; and &lt;code&gt;months&lt;/code&gt; are greater than &lt;code&gt;1&lt;/code&gt; which means we do not need to consider pluralisation for these labels. For &lt;code&gt;days&lt;/code&gt;, we could apply a pluralisation if the &lt;code&gt;days&lt;/code&gt; has a value greater than &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This was all put assembled into a function as a filter in the &lt;code&gt;.eleventy.js&lt;/code&gt; configuration file.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;  cfg&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addFilter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;timeAgo&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;dateObj&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; now &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; days &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ceil&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;now &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; dateObj&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;86400000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; months &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;days &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; years &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;months &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;years &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;years&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; years ago&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;months &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;months&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; months ago&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;days&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; days ago&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Implementing this function within the &lt;code&gt;.eleventy.js&lt;/code&gt; file as a filter meant that within an template, we could format the article&#39;s date by applying this filter.&lt;/p&gt;
&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;  Published {{ page.date | timeAgo }}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And during the eleventy build step, the page will output&lt;/p&gt;
&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;  Published 1 days ago&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;h2&gt;Hitting a Roadblock&lt;/h2&gt;
&lt;p&gt;This is where I ran into my first roadblock.&lt;/p&gt;
&lt;p&gt;Eleventy has been &lt;em&gt;serving&lt;/em&gt; my needs perfectly well for several months, since &lt;a href=&quot;https://brd.mn/articles/eleventy/&quot;&gt;rebuilding my site with Eleventy&lt;/a&gt; last year, but my code was only run during the build step, which means any changes are only updated to the site when it is deployed.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;With a statically generated site, a post that shows a publication time of &lt;code&gt;1 days ago&lt;/code&gt; would continue to display this until the next article was written causing the site to be rebuilt and republished.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This did not seem to solve my problem as it is often months between writing new articles. There are workarounds, like using a cron task to trigger a rebuild every day, but that would be wasteful. Instead of using this function within the template, I needed to move the script into the browser to be run on page load.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Making Relative Dates Dynamic&lt;/h2&gt;
&lt;p&gt;We will need to refactor our function and move it to a new file to publish at &lt;code&gt;/js/timeAgo.js&lt;/code&gt; and add a reference to this file from the &lt;code&gt;_header&lt;/code&gt; template to include it on each page of the site once it&#39;s published.&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;/js/timeAgo.js&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;defer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This also needed to be published in the &lt;code&gt;.eleventy.js&lt;/code&gt; config, here I&#39;m publishing the whole &lt;code&gt;/js/&lt;/code&gt; directory, even though there&#39;s only one file required at the moment.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;  cfg&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addPassthroughCopy&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;src/js/*.*&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Within the &lt;code&gt;timeAgo.js&lt;/code&gt; file we have three things to accomplish.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Running our script when the page loads&lt;/li&gt;
&lt;li&gt;Find all of the dates on the page&lt;/li&gt;
&lt;li&gt;Replacing the date with the relative time&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Covering each of these items in &lt;em&gt;reverse&lt;/em&gt; order.&lt;/p&gt;
&lt;h3&gt;3. Replacing the date with the relative time&lt;/h3&gt;
&lt;p&gt;We can lift most of our logic from the previous &lt;code&gt;timeAgo&lt;/code&gt; filter function into our new file, while here, we can also take an optional second date to make testing easier.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;timeAgo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;time&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; now&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;now&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; now &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; ms &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; now &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; time&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; days &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ceil&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ms &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;86400&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; months &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;days &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; years &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;days &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;365&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;years &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;years&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; years ago&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;months &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;months&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; months ago&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;days&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; days ago&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This function will take a &lt;code&gt;Date()&lt;/code&gt; object as the first argument (and an optional second argument to override the &lt;code&gt;new Date()&lt;/code&gt; for testing) and return a formatted relative time string.&lt;/p&gt;
&lt;h3&gt;2. Find all of the dates on the page&lt;/h3&gt;
&lt;p&gt;There is a piece of setup required here. In our template file, we want to generate some HTML code that gives a clean way to find where in the page to render the relative times, but we also need the dates available as input for function.&lt;/p&gt;
&lt;p&gt;We can use &lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt; HTML tags as our placeholder and we can use the &lt;code&gt;datetime&lt;/code&gt; attribute to hold the source dates. Inside the tag, we can display the static article date, which will be overwritten with the string returned from the &lt;code&gt;timeAgo&lt;/code&gt; function.&lt;/p&gt;
&lt;pre class=&quot;language-mustache&quot;&gt;&lt;code class=&quot;language-mustache&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;{{ article.data.date | postDate }}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;postDate&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With these dates now well structured, the code to find and replace each on the page is covered in this &lt;code&gt;relativeDates&lt;/code&gt; function. We first query for all &lt;code&gt;time&lt;/code&gt; elements which have the &lt;code&gt;datetime&lt;/code&gt; attribute, then for each of these we parse the date and replace the contents of the element with the formatted &lt;code&gt;timeAgo&lt;/code&gt; string.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;relativeDates&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; els &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelectorAll&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;time[datetime]&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  els&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;el&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; date &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;el&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getAttribute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;datetime&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    el&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;innerHTML &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;timeAgo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;date&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;1. Running our script when the page loads&lt;/h3&gt;
&lt;p&gt;With these other changes in place we need to trigger our &lt;code&gt;relativeDates()&lt;/code&gt; function to run when the pages is loaded, which can be achieved with:&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;onload &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;relativeDates&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;h2&gt;Bringing it all together&lt;/h2&gt;
&lt;p&gt;With our change to the template including our script&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;/js/timeAgo.js&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;defer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And marking up our templates with a structured &lt;code&gt;time&lt;/code&gt; tag.&lt;/p&gt;
&lt;pre class=&quot;language-mustache&quot;&gt;&lt;code class=&quot;language-mustache&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;{{ article.data.date | postDate }}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;postDate&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And the full &lt;code&gt;timeAgo.js&lt;/code&gt; file now contains the three requirements listed above&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;onload &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;relativeDates&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;relativeDates&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; els &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelectorAll&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;time[datetime]&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  els&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;el&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; date &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;el&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getAttribute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;datetime&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    el&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;innerHTML &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;timeAgo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;date&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;timeAgo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;time&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; now&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;time&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;now&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; now &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; ms &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; now &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; time&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; days &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ceil&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ms &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;86400&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; months &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;days &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; years &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;days &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;365&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;years &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;years&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; years ago&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;months &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;months&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; months ago&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;days&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; days ago&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Bonus &amp;quot;Today&amp;quot;&lt;/h2&gt;
&lt;p&gt;As an added bonus, we can add a quick check to our &lt;code&gt;timeAgo&lt;/code&gt; function to check if the article date is &amp;quot;Today&amp;quot; and return this&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;    now&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getDate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; time&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getDate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;br /&gt;    now&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getMonth&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; time&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getMonth&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;br /&gt;    now&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getFullYear&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; time&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getFullYear&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Today&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

        </content>
    </entry>
    
    <entry>
      <title>Getting Started with AI</title>
      <link href="https://brd.mn/articles/ai/">
      <updated>2023-03-08T00:00:00Z</updated>
      <id>https://brd.mn/articles/ai/</id>
      <content type="html">
        &lt;p&gt;&lt;img src=&quot;https://brd.mn/articles/ai/conny-schneider-xuTJZ7uD7PI-unsplash.jpg&quot; alt=&quot;A graphic depicting a network of blue dots connected by lines&quot; /&gt;&lt;/p&gt;
        &lt;p&gt;Artificial intelligence (AI) is one of the most exciting and rapidly growing fields in technology today. With AI, we can create machines that can learn, reason, and make decisions like humans, and this has enormous potential to transform many areas of our lives, from healthcare to transportation to entertainment.&lt;/p&gt;
&lt;h2&gt;The Basics&lt;/h2&gt;
&lt;p&gt;AI refers to the development of computer systems that can perform tasks that would normally require human intelligence, such as recognizing speech or images, understanding natural language, or making decisions based on data. There are different types of AI, including:&lt;/p&gt;
&lt;h3&gt;Rule-based AI&lt;/h3&gt;
&lt;p&gt;These systems are programmed with a set of rules that determine how they should respond to different inputs. For example, a chatbot that answers customer service questions might be programmed with a set of rules that determine how it should respond to different types of questions.&lt;/p&gt;
&lt;h3&gt;Machine learning&lt;/h3&gt;
&lt;p&gt;Machine learning is a type of AI that uses algorithms to learn from data and improve its performance over time. For example, a machine learning algorithm might be used to recognize images of cats and dogs by analyzing thousands of pictures of cats and dogs and learning to identify the features that distinguish them.&lt;/p&gt;
&lt;h3&gt;Deep learning&lt;/h3&gt;
&lt;p&gt;Deep learning is a subset of machine learning that uses artificial neural networks to learn from data. Neural networks are modeled on the structure of the human brain, and they can be trained to perform tasks like recognizing speech or images.&lt;/p&gt;
&lt;h2&gt;Tools and Resources for Learning AI&lt;/h2&gt;
&lt;p&gt;To get started with AI, you&#39;ll need some programming experience and some familiarity with AI tools and libraries. One popular programming language for AI and machine learning is Python, which is known for its simplicity and versatility. There are many online resources and tutorials available to help you learn Python, including &lt;a href=&quot;https://www.codecademy.com/&quot;&gt;Codecademy&lt;/a&gt;, &lt;a href=&quot;https://www.coursera.org/search?query=ai&amp;amp;&quot;&gt;Coursera&lt;/a&gt;, and &lt;a href=&quot;https://www.udacity.com/&quot;&gt;Udacity&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.tensorflow.org/&quot;&gt;TensorFlow&lt;/a&gt; is an open-source software library developed by Google for building machine learning models. It provides pre-built models and functions that can be used to build AI systems more easily. TensorFlow has a large and active community of developers and users, and there are many online resources and tutorials available to help you get started. Keras is a high-level neural networks API written in Python that can run on top of TensorFlow, Theano, or Microsoft Cognitive Toolkit. Keras makes it easy to build and experiment with deep learning models, and it&#39;s a popular choice for beginners. PyTorch is another popular open-source machine learning library that is known for its ease of use and flexibility. It&#39;s used by researchers and developers around the world for everything from image and speech recognition to natural language processing.&lt;/p&gt;
&lt;h2&gt;Getting started with machine learning using Python&lt;/h2&gt;
&lt;p&gt;To use Python with machine learning, you&#39;ll need to familiarize yourself with the Python language, as well as some key libraries for machine learning. One of the most popular libraries for machine learning in Python is &lt;a href=&quot;https://scikit-learn.org/stable/index.html&quot;&gt;scikit-learn&lt;/a&gt;. Scikit-learn is a free machine learning library that supports supervised and unsupervised learning, as well as a variety of different algorithms and techniques. It includes tools for data preprocessing, feature selection, model evaluation, and more. To get started with scikit-learn, you can install it using pip, a package manager for Python, and then import it into your Python code.&lt;/p&gt;
&lt;p&gt;Once you have scikit-learn installed and imported, you can start building your machine learning model. The first step is usually to load your data into Python. Scikit-learn supports a variety of different data formats, including CSV, Excel, and more. Once you have your data loaded, you can preprocess it using tools like feature scaling or normalization to prepare it for use with machine learning algorithms.&lt;/p&gt;
&lt;p&gt;Next, you can start building your machine learning model. Scikit-learn includes a variety of different algorithms and techniques for machine learning, including linear regression, logistic regression, decision trees, random forests, and more. You can choose the algorithm that best fits your data and problem, and then train the model on your data using scikit-learn&#39;s &lt;code&gt;fit()&lt;/code&gt; method.&lt;/p&gt;
&lt;p&gt;Once you&#39;ve trained your model, you can evaluate its performance using scikit-learn&#39;s metrics functions. These functions allow you to measure the accuracy, precision, recall, and other performance metrics of your model. You can then use this information to refine your model and improve its performance.&lt;/p&gt;
&lt;p&gt;An example of this workflow is demonstrated in the below code sample.&lt;/p&gt;
&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; numpy &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; np&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; sklearn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;linear_model &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; LinearRegression&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# Load the dataset&lt;/span&gt;&lt;br /&gt;X &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; np&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;array&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;y &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; np&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;array&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# Create a linear regression model&lt;/span&gt;&lt;br /&gt;model &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; LinearRegression&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# Train the model on the dataset&lt;/span&gt;&lt;br /&gt;model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;fit&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;X&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# Use the model to make predictions on new data&lt;/span&gt;&lt;br /&gt;X_new &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; np&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;array&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;y_pred &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;predict&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;X_new&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# Print the predicted values&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;y_pred&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Approaching Your First AI Project&lt;/h2&gt;
&lt;p&gt;Once you&#39;ve learned the basics of AI and familiarized yourself with some of the most popular tools and resources, it&#39;s time to start thinking about your first AI project. Here are some tips on how to approach your first AI project:&lt;/p&gt;
&lt;p&gt;Start small: Don&#39;t try to build a complex AI system right away. Start with a simple project, like building a chatbot or creating a program that can recognize handwritten digits. This will help you get comfortable with the tools and techniques involved in building AI systems.&lt;/p&gt;
&lt;p&gt;Use existing models: Don&#39;t try to reinvent the wheel. There are many pre-built models and libraries available that you can use to build your AI project more quickly and easily. For example, if you&#39;re building an image recognition system, you can use pre-built models like ResNet or Inception.&lt;/p&gt;
&lt;p&gt;Get feedback: Once you&#39;ve built your AI system, get feedback from others. Show it to friends, family, or colleagues and ask for their input. This will help you identify areas where your system can be improved and give you ideas for future projects.&lt;/p&gt;
&lt;p&gt;Keep learning: AI is a rapidly evolving field, and there&#39;s always more to learn. Stay up to date with the latest developments by reading research papers, attending conferences and workshops, and participating in online communities like Reddit or GitHub.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: This article was written with the assistance of &lt;a href=&quot;https://help.openai.com/en/articles/6825453-chatgpt-release-notes&quot;&gt;ChatGPT&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

        </content>
    </entry>
    
    <entry>
      <title>Ruby-on-Rails Conditional Validation</title>
      <link href="https://brd.mn/articles/rails-conditional-validation/">
      <updated>2023-02-10T00:00:00Z</updated>
      <id>https://brd.mn/articles/rails-conditional-validation/</id>
      <content type="html">
        &lt;p&gt;&lt;img src=&quot;https://brd.mn/articles/rails-conditional-validation/invalid.jpg&quot; alt=&quot;Orange diamond sign featuring a black exclamation point&quot; /&gt;&lt;/p&gt;
        &lt;p&gt;Looking to implement a new feature within our codebase, we were looking at adding some new fields and applying validation for these, which seemed simple enough.&lt;/p&gt;
&lt;p&gt;However when working with legacy codebases there will always be considerations for existing requirements and ensuring that a new change does not cause a regression. Having a reliable set of tests here is great, because they can point out these regressions before your users do.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;In a Ruby-on-Rails model, a validation for the &lt;a href=&quot;https://guides.rubyonrails.org/active_record_validations.html#presence&quot;&gt;presence&lt;/a&gt; of &lt;code&gt;firstname&lt;/code&gt; and &lt;code&gt;lastname&lt;/code&gt; can be added with:&lt;/p&gt;
&lt;pre class=&quot;language-ruby&quot;&gt;&lt;code class=&quot;language-ruby&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; ApplicationRecord&lt;br /&gt;  validates &lt;span class=&quot;token symbol&quot;&gt;:firstname&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token symbol&quot;&gt;presence&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;br /&gt;  validates &lt;span class=&quot;token symbol&quot;&gt;:surname&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token symbol&quot;&gt;presence&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;However, if this is being added to an existing model which is already in use and contains records &lt;em&gt;without&lt;/em&gt; these fields. The business logic of the application may also require that creating and updating these &lt;code&gt;User&lt;/code&gt; models without requiring either of the name fields.&lt;/p&gt;
&lt;p&gt;In this case the validation may only be required if the user of the system has begun adding one of these fields, ensuring that if either one fields has a value, then the validation should be run. This is where &lt;a href=&quot;https://guides.rubyonrails.org/active_record_validations.html#conditional-validation&quot;&gt;conditional validation&lt;/a&gt; would apply.&lt;/p&gt;
&lt;p&gt;With conditional validation, we can define the circumstances in which the validation rules should be applied. E.g. to ensure both &lt;code&gt;firstname&lt;/code&gt; and &lt;code&gt;surname&lt;/code&gt; are present if one has value, this could be added with:&lt;/p&gt;
&lt;pre class=&quot;language-ruby&quot;&gt;&lt;code class=&quot;language-ruby&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; ApplicationRecord&lt;br /&gt;  validates &lt;span class=&quot;token symbol&quot;&gt;:firstname&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token symbol&quot;&gt;presence&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token symbol&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token symbol&quot;&gt;:has_name?&lt;/span&gt;&lt;br /&gt;  validates &lt;span class=&quot;token symbol&quot;&gt;:surname&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token symbol&quot;&gt;presence&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token symbol&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token symbol&quot;&gt;:has_name?&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token method-definition&quot;&gt;&lt;span class=&quot;token function&quot;&gt;has_name&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;&lt;br /&gt;    firstname&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;present&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; surname&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;present&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;end&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here, the two validation rules are only conditionally applied if the &lt;code&gt;has_name&lt;/code&gt; block is evaluated to &lt;em&gt;true&lt;/em&gt;. In this case, the block evaluates to &lt;em&gt;true&lt;/em&gt; if either &lt;code&gt;firstname&lt;/code&gt; or &lt;code&gt;surname&lt;/code&gt; is &lt;em&gt;present&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Alternately, the validation can be &lt;a href=&quot;https://guides.rubyonrails.org/active_record_validations.html#grouping-conditional-validations&quot;&gt;handled as a group&lt;/a&gt; within a conditional block:&lt;/p&gt;
&lt;pre class=&quot;language-ruby&quot;&gt;&lt;code class=&quot;language-ruby&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; ApplicationRecord&lt;br /&gt;  with_options &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token symbol&quot;&gt;:has_name?&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;user&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;&lt;br /&gt;    user&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;validates &lt;span class=&quot;token symbol&quot;&gt;:firstname&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token symbol&quot;&gt;presence&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;br /&gt;    user&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;validates &lt;span class=&quot;token symbol&quot;&gt;:surname&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token symbol&quot;&gt;presence&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;end&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token method-definition&quot;&gt;&lt;span class=&quot;token function&quot;&gt;has_name&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;&lt;br /&gt;    firstname&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;present&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; surname&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;present&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;end&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With these validations in place, a &lt;code&gt;User&lt;/code&gt; record will be value with either both fields empty or both fields present, but invalid if only one of the fields is present.&lt;/p&gt;

        </content>
    </entry>
    
    <entry>
      <title>Painting a Pair of Foxes</title>
      <link href="https://brd.mn/articles/foxes-painting/">
      <updated>2023-01-16T00:00:00Z</updated>
      <id>https://brd.mn/articles/foxes-painting/</id>
      <content type="html">
        &lt;p&gt;&lt;img src=&quot;https://brd.mn/articles/foxes-painting/numbered_paints_with_brushes.jpg&quot; alt=&quot;Painting&quot; /&gt;&lt;/p&gt;
        &lt;p&gt;During my holidays, I usually enjoy spending a morning or an afternoon building a LEGO set. It is a relaxing time, with some quiet music, clear instructions and something to keep my hands busy.&lt;/p&gt;
&lt;p&gt;This year, the children and I were each working on our LEGO sets around the dining table and my wife pulled out some paint by numbers kits to work on with us.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://brd.mn/articles/foxes-painting/LEGO_007.webp&quot; alt=&quot;LEGO James Bond in his Aston Martin&quot; title=&quot;Minifig James Bond sitting comfortably in his LEGO Aston Martin&quot; /&gt;&lt;/p&gt;
&lt;p&gt;After completing my LEGO set, and James Bond sitting comfortably in his Aston Martin, I began working on one of the paint-by-numbers kits the children had openned by then abandoned due to the compexity and detail.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A paint-by-numbers project is a type of painting that is pre-outlined with numbers corresponding to specific paint colors.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I began with the paint colour &lt;code&gt;#1&lt;/code&gt; and started working my way through the colours. This project too much longer than my usual LEGO sets and several times I completely lost track of time &amp;quot;in the zone&amp;quot;.&lt;/p&gt;
&lt;p&gt;After completing my first painting session, several hours later, I had applied half a dozen colours to the canvas.&lt;/p&gt;
&lt;p&gt;And it resembed some smudges, or a spilled cup of tea.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://brd.mn/articles/foxes-painting/foxes_progress_0.webp&quot; alt=&quot;Painting progress&quot; title=&quot;Canvas with orange blotches, coloured paints in containers&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Canvas with orange blotches, coloured paints in containers&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This was the first time doing this sort of project, though I had painted minature figures for tabletop games previously. My primary concern is that I was unsure how much paint to use. Too much paint and I&#39;d run out, too little and the lines and numbers would show through, requiring more time and effort going back over those areas.&lt;/p&gt;
&lt;p&gt;It wasn&#39;t until I&#39;d begun adding the thirteenth colour (&lt;code&gt;#14&lt;/code&gt;, I skipped the white &lt;code&gt;#13&lt;/code&gt;) to the canvas that the foxes started really revealing themselves.&lt;/p&gt;
&lt;p&gt;I had been given the canvas from the box without seeing that the result was going to be, so it was great to see the image taking shape, though there was still a lot of paint left to be applied to the canvas. And I was noticing more and more areas that I&#39;d missed on my first run through with each of the numbered paints.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://brd.mn/articles/foxes-painting/foxes_progress_1.webp&quot; alt=&quot;Painting progress&quot; title=&quot;Brown paint is added to the previous orange blotches, and the forms are beginning to resembles a pair of foxes&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Brown paint is added to the previous orange blotches, and the forms are beginning to resembles a pair of foxes&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;After a dozen painting sessions over two weeks, the painting was nearing completion. More time was spent opening and closing paint and cleaning the brush between applying colours as I found and painted more areas that had been missed.&lt;/p&gt;
&lt;p&gt;Some additional paint was also added to cover the areas which had be painted too thinly previously that the numbers or lines were showing through the paint.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://brd.mn/articles/foxes-painting/foxes_progress_2.webp&quot; alt=&quot;Painting progress&quot; title=&quot;The addition of pink paint is used to separate the foxes from the backgound an sets a warm tone to the painting&quot; /&gt;&lt;/p&gt;
&lt;p&gt;The addition of pink paint is used to separate the foxes from the backgound an sets a warm tone to the painting&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The final colour to be added was the five pots of &lt;code&gt;#13&lt;/code&gt; white paint. And it was quite tiring painting a whole lot of nothing, ensuring that there was a reasonably even coating of paint and that it was applied thick enough to cover most hints of the lines and numbers below.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://brd.mn/articles/foxes-painting/foxes.webp&quot; alt=&quot;Foxes painting&quot; title=&quot;Finished painting showing two foxes nuzzling&quot; /&gt;&lt;/p&gt;

        </content>
    </entry>
    
    <entry>
      <title>What are DORA metrics?</title>
      <link href="https://brd.mn/articles/dora-metrics/">
      <updated>2023-01-10T00:00:00Z</updated>
      <id>https://brd.mn/articles/dora-metrics/</id>
      <content type="html">
        &lt;p&gt;&lt;img src=&quot;https://brd.mn/articles/dora-metrics/mitchel-boot-hOf9BaYUN88-unsplash.jpg&quot; alt=&quot;Dials, gauges, and controls from an aircraft cockpit&quot; /&gt;&lt;/p&gt;
        &lt;p&gt;&lt;abbr title=&quot;DevOps Research and Assessment team&quot;&gt;DORA&lt;/abbr&gt; stands for The DevOps Research and Assessment team. Within a seven-year program, this Google research group analyzed DevOps practices and capabilities and has been able to identify four key metrics to measure software development and delivery performance.&lt;/p&gt;
&lt;p&gt;The health and performance of a product engineering team can be assessed using four key metrics.&lt;/p&gt;
&lt;h2&gt;The Four DORA Metrics&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Deployment Frequency&lt;/li&gt;
&lt;li&gt;Lead Time for Changes&lt;/li&gt;
&lt;li&gt;Mean Time to Recover&lt;/li&gt;
&lt;li&gt;Change Failure Rate&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Deployment Frequency&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;How often does your organization deploy code to production or release it to end-users?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Higher performing teams will generally deploy more often, with a standard being at least once per week.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Elite: On-demand (multiple deployments per day)&lt;/li&gt;
&lt;li&gt;High: Between once per day and once per week&lt;/li&gt;
&lt;li&gt;Medium: Between once per week and once per month&lt;/li&gt;
&lt;li&gt;Low: Between once per month and once every six months&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Lead Time for Changes&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;How long does it take to go from code committed to code successfully running in production?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This metric indicates the velocity of software delivery, measuring the time between creating a commit and deploying this change to production.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Elite: Less than one day&lt;/li&gt;
&lt;li&gt;High: Between one day and one week&lt;/li&gt;
&lt;li&gt;Medium: Between one week and one month&lt;/li&gt;
&lt;li&gt;Low: Between one month and six months&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Mean Time to Recover&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;How long does it take to restore service when a service incident or a defect that impacts users occur?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Unplanned outages or incidents happen to even the highest performing team, tracking how much time it takes for a service to bounce back from failure demonstrates the team&#39;s ability to recover a system. Shorter recovery times build confidence.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Elite: Less than an hour&lt;/li&gt;
&lt;li&gt;High: Less than one day&lt;/li&gt;
&lt;li&gt;Medium: Less than one week&lt;/li&gt;
&lt;li&gt;Low: Between one week and one month&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Change Failure Rate&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;What percentage of changes to production or end-users results in degraded service?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;abbr title=&quot;Change Failure Rate&quot;&gt;CFR&lt;/abbr&gt; is a true measure of quality and stability of a team&#39;s delivery process and the resulting system.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Elite: 0-15%&lt;/li&gt;
&lt;li&gt;High: 16-30%&lt;/li&gt;
&lt;li&gt;Medium: 31-45%&lt;/li&gt;
&lt;li&gt;Low: 46-60%&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Bonus: Reliability Metric&lt;/h2&gt;
&lt;p&gt;In 2021, the DORA team added a fifth metric — reliability — to the list of things that can impact organizational performance.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Historically we have measured availability rather than reliability, but because availability is a specific focus of reliability engineering, we’ve expanded our measure to reliability so that availability, latency, performance, and scalability are more broadly represented.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Summary Chart&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://brd.mn/articles/dora-metrics/dora-metrics.webp&quot; alt=&quot;Chart outlining the DORA metrics&quot; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.leanix.net/en/wiki/vsm/dora-metrics&quot;&gt;THE DEFINITIVE GUIDE TO
DORA Metrics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://cloud.google.com/blog/products/devops-sre/using-the-four-keys-to-measure-your-devops-performance&quot;&gt;Are you an Elite DevOps performer? Find out with the Four Keys Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://cloud.google.com/blog/products/devops-sre/announcing-dora-2021-accelerate-state-of-devops-report&quot;&gt;Announcing DORA 2021 Accelerate State of DevOps report | Google Cloud Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://unsplash.com/photos/hOf9BaYUN88?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditShareLink&quot;&gt;Photo by Mitchel Boot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        </content>
    </entry>
    
    <entry>
      <title>Ascii Banana</title>
      <link href="https://brd.mn/articles/ascii-banana/">
      <updated>2022-12-16T00:00:00Z</updated>
      <id>https://brd.mn/articles/ascii-banana/</id>
      <content type="html">
        &lt;p&gt;&lt;img src=&quot;https://brd.mn/articles/ascii-banana/banana_keyboard.webp&quot; alt=&quot;A bright yellow keyboard shaped like a banana with yellow, pink, and purple keycaps&quot; /&gt;&lt;/p&gt;
        &lt;p&gt;This &lt;a href=&quot;https://www.etsy.com/au/listing/1232068534/8-key-banana-macropad&quot;&gt;banana keyboard&lt;/a&gt; project is bit of a joke keyboard which started when someone shared a link to some novelty keyboards / macro pads in an &lt;a href=&quot;https://www.etsy.com/au/shop/Steboards&quot;&gt;Etsy Store&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The banana keyboard arrived a few weeks after I ordered it and looked great. The eight keys were mapped to the &lt;code&gt;F13&lt;/code&gt; - &lt;code&gt;F20&lt;/code&gt; range. I could use the macOS Keyboard Shortcuts settings to map these keys to almost any individual action I might want.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://brd.mn/articles/ascii-banana/keyboard-shortcuts-settings.webp&quot; alt=&quot;Keyboard Shortcuts&quot; title=&quot;Image of macOS Keyboard Shortcuts settings with F13 mapped&quot; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;However the eighth key, mapped to &lt;code&gt;F20&lt;/code&gt;, wasn&#39;t registering in macOS. This led me down a bit of a rabbit hole of searches. The primary takeaway being that macOS doesn&#39;t handle function keys above 19 the same way as the rest of the keyboard.&lt;/p&gt;
&lt;p&gt;Not content with an unusable key on my banana, I messaged the seller on Etsy, who quickly replied with the source code they&#39;d used to program the banana.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;arduino&lt;/code&gt; code was reasonably straight forward and didn&#39;t take much effort to make some changes. With the &lt;a href=&quot;https://create.arduino.cc/&quot;&gt;Arduino Cloud Editor&lt;/a&gt; (and the companion firmware) I managed to reprogram my banana keyboard from the internet!&lt;/p&gt;
&lt;p&gt;Referencing the &lt;a href=&quot;https://www.arduino.cc/reference/en/language/functions/usb/keyboard/&quot;&gt;Arduino Keyboard library&lt;/a&gt;, the first goal I had was to remove the &lt;code&gt;F20&lt;/code&gt; and replace it with something that would register in macOS. A bit of code refactor to group all the output keys together and I had something working (&lt;a href=&quot;https://gist.github.com/pbrdmn/5a44e6726664d8411423e7133ea8912d&quot;&gt;banana.c&lt;/a&gt;).&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;After playing around with the code, I first began looking at adjusting when keys sent the press event. By moving this from the initial &lt;em&gt;on&lt;/em&gt; change to the &lt;em&gt;off&lt;/em&gt; change, I could trigger different actions for short vs long presses (e.g. &amp;quot;tap&amp;quot; vs &amp;quot;hold&amp;quot;) and by holding even longer, expire the event altogether.&lt;/p&gt;
&lt;pre class=&quot;language-c&quot;&gt;&lt;code class=&quot;language-c&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// handle button press for duration&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;duration &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; DEBOUNCE_TIME&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// ignore noise&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;duration &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; HOLD_TIME&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// handle tap&lt;/span&gt;&lt;br /&gt;  Keyboard&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;taps&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;duration &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; TIMEOUT&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// handle hold&lt;/span&gt;&lt;br /&gt;  Keyboard&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;holds&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// held too long&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This allowed the eight key banana to reliably emit 16 different events. The full code for this is available at &lt;a href=&quot;https://gist.github.com/pbrdmn/ad6a53a064057658a2a4f19d895c0077&quot;&gt;hex_banana.c&lt;/a&gt;.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Thinking about other opportunities for an eight key macro pad, I had the idea of using each of the eight keys to control individual character bits and allow the typing of ascii characters by inputting the binary values directly, treating the whole macro pad as a chorded keyboard, similar to a &lt;a href=&quot;https://en.wikipedia.org/wiki/Stenotype&quot;&gt;stenotype&lt;/a&gt; keyboard. I had been thinking about this recently and put together a &lt;a href=&quot;https://www.redbubble.com/i/sticker/Hello-world-binary-by-philip-boardman/134772669.EJUG5&quot; title=&quot;Sticker design with binary representation of each letter in the string &#39;Hello world.&#39;&quot;&gt;&amp;quot;Hello World.&amp;quot; binary sticker&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The keyboard captures each of the keys being pressed and store this into an internal buffer. Once all the keys have been released, the recorded input is then processed and output as an ascii character.&lt;/p&gt;
&lt;p&gt;Another quick rabbit hole, some bit setting functions and a relatively clean solution appeared for the &lt;a href=&quot;https://gist.github.com/pbrdmn/646eedc374ec37e680a70c88dc4bfcc3&quot;&gt;ascii_banana.c&lt;/a&gt; keyboard.&lt;/p&gt;
&lt;p&gt;Not without fault and edge cases, and plenty of other opportunities for improvement, but flashing this code to the banana keyboard (again, from the internet!) and a few rounds of debugging 😅 and the banana began emitting characters!&lt;/p&gt;
&lt;p&gt;Referencing an &lt;a href=&quot;https://www.binaryhexconverter.com/binary-ascii-characters-table&quot; title=&quot;Table listing ascii characters and their binary representation&quot;&gt;ascii table&lt;/a&gt; (no, I didn&#39;t have these committed to memory), I hold down the keys corresponding to&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;01001000&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;and on the screen, the keyboard prints&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;H&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;next I enter&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;01100101&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;and on the screen&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;He&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;continuing with&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;01101100&lt;br /&gt;
01101100&lt;br /&gt;
01101111&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;and I have typed&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hello&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;p&gt;A bit more tinkering and a few rough edges, but a fun experiement into some different ideas.&lt;/p&gt;
&lt;p&gt;The code for different banana keyboard functions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/pbrdmn/5a44e6726664d8411423e7133ea8912d&quot;&gt;banana.c&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/pbrdmn/ad6a53a064057658a2a4f19d895c0077&quot;&gt;hex_banana.c&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/pbrdmn/646eedc374ec37e680a70c88dc4bfcc3&quot;&gt;ascii_banana.c&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After contacting the seller on Etsy, this code has now been contributed to the public &lt;a href=&quot;https://github.com/SteBoards/BananaKeyboardCode&quot;&gt;SteBoards/BananaKeyboardCode repo on GitHub&lt;/a&gt; where others can use these as examples.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Order a &lt;a href=&quot;https://www.redbubble.com/i/sticker/Hello-world-binary-ascii-dark-mode-by-philip-boardman/134772927.EJUG5?asc=u&quot;&gt;Hello World binary sticker&lt;/a&gt; from my Redbubble store.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.redbubble.com/i/sticker/Hello-world-binary-ascii-dark-mode-by-philip-boardman/134772927.EJUG5?asc=u&quot;&gt;&lt;img src=&quot;https://brd.mn/articles/ascii-banana/work-134772927-sticker-bottle.jpg&quot; alt=&quot;&amp;quot;Hello world.&amp;quot; binary, ascii, dark mode&quot; title=&quot;Order a &#39;Hello World&#39; binary sticker&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

        </content>
    </entry>
    
    <entry>
      <title>Good mentors make good managers; a journey from IC to management</title>
      <link href="https://brd.mn/articles/mentors/">
      <updated>2022-11-28T00:00:00Z</updated>
      <id>https://brd.mn/articles/mentors/</id>
      <content type="html">
        &lt;p&gt;&lt;img src=&quot;https://brd.mn/articles/mentors/mentors.webp&quot; alt=&quot;Presentation outlining my career change into management&quot; /&gt;&lt;/p&gt;
        &lt;blockquote&gt;
&lt;p&gt;A presentation outlining my career change into management, for Web Directions &lt;a href=&quot;https://webdirections.org/leaders/&quot;&gt;Code Leaders&lt;/a&gt; and &lt;a href=&quot;https://webdirections.org/summit/&quot;&gt;Summit&lt;/a&gt; 2022.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Continually learning&lt;/h2&gt;
&lt;p&gt;In the beginning of my career, I worked as a web developer for several small companies. There was often little thought put toward career development, mentorship, or any training beyond what was required to get the day-to-day work completed, though sometimes not even that.&lt;/p&gt;
&lt;p&gt;I would learn new programming languages and tools on my own time that seemed interesting and would unlock the skills to build websites or applications in a new way.&lt;/p&gt;
&lt;p&gt;To me, self-directed and independent learning appeared to be the industry norm. The people building the web were responsible for their own education, keeping their skills up to date, and knowing which tools would be relevant. Myself and those I knew would spend time outside of work for learning and development activities.&lt;/p&gt;
&lt;p&gt;Without a clear path for development, people tended to learn technical skills—those that are commonly discussed and easy to demonstrate for job applications. But we might have been missing out on critical career development knowledge from structured learning pathways.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Unstructured career&lt;/h2&gt;
&lt;p&gt;Like me, I imagine for many people a career in software development wasn’t started with a clear path mapped out to where you would end up.&lt;/p&gt;
&lt;p&gt;You liked playing with computers, you got a programming book, took a course, or taught yourself to code by pulling apart websites in your free time - which was my experience.&lt;/p&gt;
&lt;p&gt;This interest in computers, technology, and learning about programming after school continued as I studied computer engineering at university. Here I learned of Unix, microcontrollers, and many of the programming fundamentals, principles, and patterns I still use today.&lt;/p&gt;
&lt;p&gt;I found the university courses in IT and software engineering taught me how to write code, how software works, and the basics of how to run a software project. But I found little there that would help build a career roadmap beyond what it meant to write software.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Years of experience&lt;/h2&gt;
&lt;p&gt;With no structured development plan, fresh learning opportunities can be difficult to identify. Without a plan, you can spend several years repeating the same experience, doing the same work. You might get better at doing the work, but without being challenged, it is difficult to grow.&lt;/p&gt;
&lt;p&gt;One question I wish I would have asked myself more deliberately through this time is, &amp;quot;What do I need to learn next?&amp;quot;&lt;/p&gt;
&lt;p&gt;Without having an understanding of the career path, the opportunities I took were the ones that came to me. Some of these were excellent and enjoyable, like building and publishing iPhone apps for a cycling magazine. Some were more tedious, like rebuilding a cycling classified ads site or implementing an in-house advertising inventory management system.&lt;/p&gt;
&lt;p&gt;On the whole, I was learning and developing my skills, but &lt;em&gt;not&lt;/em&gt; deliberately and &lt;em&gt;not&lt;/em&gt; strategically. I was collecting a lot of broad knowledge but lacking depth, and I didn&#39;t have a framework in place to make continued progress in any one area.&lt;/p&gt;
&lt;p&gt;Looking back at this time, this saying rang very true for me: &amp;quot;10 years of experience vs. 1 year of experience, ten times.&amp;quot;&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Becoming deliberate&lt;/h2&gt;
&lt;p&gt;I was reaching my third year working at a web design agency. I had been working with account managers and designers, learning about working with clients and managing stakeholders.&lt;/p&gt;
&lt;p&gt;I didn&#39;t know what was next for me, but I knew that I wanted to find someone who could help me consider my career and development goals.&lt;/p&gt;
&lt;p&gt;I&#39;m sure there are many ways to do this, including finding mentors, professional career coaches, and the like, but I felt I wasn&#39;t growing in my current job and decided to look for a new role where I could better understand how to navigate the career journey of a software engineer.&lt;/p&gt;
&lt;p&gt;About this time, the &amp;quot;10x Engineer&amp;quot; memes were circulating, and I thought that the best way to become a 10x Engineer would be to support 10 other engineers in their work.&lt;/p&gt;
&lt;p&gt;This led me to begin considering engineering management, but I had no idea what I needed to do to get there, and I didn&#39;t know who to ask.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;New role, new purpose&lt;/h2&gt;
&lt;p&gt;A few years later, I was looking for a new role with this in mind. I wanted to bring my existing technical skills to the table and look at what development opportunities the prospective company would have for me too.&lt;/p&gt;
&lt;p&gt;After several interviews, I found one person who wanted to take the time to speak about what I was looking for in the future and see if that was aligned with where the company was heading.&lt;/p&gt;
&lt;p&gt;I spoke of my desire to explore the world of engineering management. I was told that the company was &amp;quot;very flat&amp;quot; at the moment and didn&#39;t &lt;em&gt;currently&lt;/em&gt; have engineering manager roles, but that it was growing quickly and there would be opportunities in the future.&lt;/p&gt;
&lt;p&gt;This was great news for me: a company where I could join and use my existing skills, with the opportunity to learn from the CTO as the company grew.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Finding a mentor&lt;/h2&gt;
&lt;p&gt;This company was &lt;a href=&quot;https://compono.com/&quot;&gt;Compono&lt;/a&gt; and the interviewer who was interested in my career was &lt;a href=&quot;https://www.linkedin.com/in/nikolay-nemshilov-07878b14/&quot;&gt;Nikolay&lt;/a&gt;, the CTO.&lt;/p&gt;
&lt;img src=&quot;https://brd.mn/articles/mentors/nikolay.webp&quot; alt=&quot;Philip and Nikolay&quot; width=&quot;800&quot; height=&quot;450&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; title=&quot;Philip and Nikolay meeting for coffee&quot; /&gt;
&lt;p&gt;I joined Compono a few weeks later and began working closely with Nikolay on the delivery of several projects, as I was learning how the company, the product, and the technology worked.&lt;/p&gt;
&lt;p&gt;In those first weeks with the small team of four engineers, I focused my efforts on learning and contributed where I could to support the team&#39;s development and planning activities.&lt;/p&gt;
&lt;p&gt;But for me, the most valuable time was the feedback in our regular one-on-one sessions.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Getting feedback&lt;/h2&gt;
&lt;p&gt;I still remember the feedback I got in that first session. I needed to connect more with the team, share what I was working on, and call out when I needed help.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Getting up to speed with docker, Buildkite​
My input in communication is helping clarify discussions​
Slow starting careful but sometimes optimistic with estimations​
Ask more questions - don&#39;t try to solve everything myself​
Asking for help helps build the culture of asking for help&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;But the feedback also came with reasons, why I should change how I was working and how this would benefit the team I was working with.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Working out loud&lt;/h2&gt;
&lt;p&gt;For me, the most unexpected feedback was about &amp;quot;working out loud.&amp;quot;&lt;/p&gt;
&lt;p&gt;It has always seemed to me that getting your work done quickly and quietly was a sign of being good at your job. Something to respect and strive for.&lt;/p&gt;
&lt;p&gt;However, I was learning that working with a team is about more than just how much code you can write. Sharing the work I was doing would share what I was learning as well as encourage others to work in this way as well.&lt;/p&gt;
&lt;p&gt;When everyone in the team was working in this open way, we could all learn from each other and have a chance to share our individual experiences with the rest of the team.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Preparing for the next step&lt;/h2&gt;
&lt;p&gt;Over the following months, Nikolay and I spoke about a variety of topics, from project management principles and team leadership skills to motivation and alignment.&lt;/p&gt;
&lt;p&gt;We talked about the aspects involved in project and people management roles that differ greatly from the day-to-day tasks faced by software engineers. I was discovering a new set of skills that weren&#39;t purely about writing and shipping code.&lt;/p&gt;
&lt;p&gt;Together, we ran through a skills gap analysis between myself and the new tech lead role that he had planned. Looking at the experience I had and the work I had demonstrated, we found the areas I should continue to focus on improving.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;New areas of knowledge&lt;/h2&gt;
&lt;p&gt;After identifying the gaps in my skills, Nikolay and I worked to cover these new areas.&lt;/p&gt;
&lt;p&gt;I was given opportunities to step up and assist further with planning and facilitation, working with stakeholders and leadership, and discussing the engineering strategy within Compono.&lt;/p&gt;
&lt;p&gt;And, of course, there were books.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Recommended reading&lt;/h2&gt;
&lt;p&gt;Nikolay supplied me with lists of books to read.&lt;/p&gt;
&lt;p&gt;We had books covering the general topic of managing people as well as the more specific topic of managing people remotely. Books about the engineering process and how to apply lean methodology to startups and several of books about systems and thinking.&lt;/p&gt;
&lt;p&gt;As an avid reader, these books were a good way to spend my time on the train; in those days when we used to commute to the office.&lt;/p&gt;
&lt;img src=&quot;https://brd.mn/articles/mentors/books.webp&quot; alt=&quot;Covers of the recommended books listed below&quot; width=&quot;800&quot; height=&quot;200&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; title=&quot;A few of the books added to my reading list at this time&quot; /&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.amazon.com.au/Simple-Habits-Complex-Times-Practices/dp/0804799431&quot;&gt;Simple Habits for Complex Times&lt;/a&gt; - Jennifer Garvey Berger and Keith Johnston&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.amazon.com.au/Thinking-Systems-Donella-H-Meadows/dp/1603580557&quot;&gt;Thinking in Systems&lt;/a&gt; - Donna Meadows&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.amazon.com.au/Long-Distance-Leader-Remarkable-Remote-Leadership/dp/1523094613&quot;&gt;The Long-Distance Leader&lt;/a&gt; - Kevin Eikenberry and Wayne Turmel&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.amazon.com.au/Thinking-Fast-Slow-Daniel-Kahneman/dp/0141033576&quot;&gt;Thinking, Fast and Slow&lt;/a&gt; - Daniel Kahneman&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.amazon.com.au/Dare-Lead-Brave-Conversations-Hearts/dp/1785042149&quot;&gt;Dare to Lead&lt;/a&gt; - Brené Brown&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.amazon.com.au/Lean-Startup-Innovation-Successful-Businesses/dp/0670921602&quot;&gt;The Lean Startup&lt;/a&gt; - Eric Ries&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;Taking the lead&lt;/h2&gt;
&lt;p&gt;At the beginning of 2020, the engineering department was growing beyond 30 engineers, and we began to form several cross-functional stream-aligned teams.&lt;/p&gt;
&lt;p&gt;This provided me with an opportunity to step up and lead a new team that was being created to build a new product to integrate and extend the functionality of the business.&lt;/p&gt;
&lt;p&gt;There was a strong vision laid out for this new product, but it would be up to the team to chart the roadmap and be responsible for delivery.&lt;/p&gt;
&lt;p&gt;And 2020 became quite an interesting year with the company shifting to fully remote operations, along with the rest of the world.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Leading the team&lt;/h2&gt;
&lt;p&gt;This team lead role meant a big change in my responsibilities.&lt;/p&gt;
&lt;p&gt;I began working with a Product Owner who was new to the company and was working with his first product team. We were shifting from our previous project-based work management approach to more agile engineering development and delivery practices.&lt;/p&gt;
&lt;p&gt;I began spending more time pairing and holding one-on-ones with the software and QA engineers in the team, making sure people had what they needed for work, talking through any issues they were facing, and ensuring everyone in the team had a common understanding of the work we were doing.&lt;/p&gt;
&lt;p&gt;All through this change, I continued to meet with my mentor to discuss my questions and identify any areas on which I would need to focus my learning.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Permission to fail&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;You&#39;ll probably fail a few times, you&#39;re still learning&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I wasn&#39;t sure how to take this at first. As the new team was forming, we were quickly finding our feet, establishing strong relationships, and building a good process for our work.&lt;/p&gt;
&lt;p&gt;I was wondering at his lack of confidence and struggling with my anxiety, perfectionism, and fear of failure.&lt;/p&gt;
&lt;p&gt;We spent a bit of time working through psychological safety after that.&lt;/p&gt;
&lt;p&gt;He described some of the behaviours he had used to encourage people to share their ideas within team settings. He would ensure everyone had an opportunity to contribute to a discussion. He would give each person room to speak and be heard. He would be the last to speak.&lt;/p&gt;
&lt;p&gt;This gave everyone the opportunity to voice their opinion and have it heard and discussed, rather than having people hold back if they thought they might be disagreeing with what the boss had said.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;New responsibilities&lt;/h2&gt;
&lt;p&gt;With the new role of tech lead came new responsibilities.&lt;/p&gt;
&lt;p&gt;In working with the Product Owner to build our product roadmap, it was my responsibility to ensure that the features we planned were feasible with our tech stack and the skills and resources of the team.&lt;/p&gt;
&lt;p&gt;We had to work together to communicate with the company&#39;s stakeholders, writing planning and reporting documents, though thankfully the Product Owner would be the one attending most of those meetings.&lt;/p&gt;
&lt;p&gt;I was also responsible for maintaining the quality of our code base and delivery metrics, ensuring that we have enough tests to give us confidence when making changes, and a robust continuous integration environment that would allow us to quickly and reliably deploy to production as frequently as we needed.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Repeating the same lessons&lt;/h2&gt;
&lt;p&gt;Now that I was working with and mentoring these engineers on the team, I found myself repeating the lessons I had first been the recipient of, encouraging the team to work out loud, sharing their work and asking for help when it was required.&lt;/p&gt;
&lt;p&gt;We worked together to build a safe environment for sharing ideas, and I was very aware of the need to be inclusive of the whole team, encouraging everyone to participate in the team&#39;s planning and estimation activities.&lt;/p&gt;
&lt;p&gt;One of the best improvements we made at this time was a suggestion from our QA engineer to bring shift left into our engineering process. We experimented by adjusting our delivery process to include an additional check-in with the QA engineer to validate changes when the software engineer was finished with their changes. After a successful trial in our team demonstrating a reduction in defects and reduced time to production, this process quickly spread to other teams in the business.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;A new chapter&lt;/h2&gt;
&lt;p&gt;The engineering department continued expanding, and there were now ten teams. A new position was created for an engineering manager to support this growing organisational structure.&lt;/p&gt;
&lt;p&gt;Using &lt;a href=&quot;https://www.atlassian.com/agile/agile-at-scale/spotify&quot;&gt;the Spotify model&lt;/a&gt;, we divided our Product and Engineering department into three tribes, each with three or four squads focused on similar areas of the business.&lt;/p&gt;
&lt;p&gt;I was promoted to Engineering Manager and given responsibility for managing the engineers and delivery within the previous team I had been leading along with two others.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;What changed&lt;/h2&gt;
&lt;p&gt;This move to Engineering Manager was as much a departure from my role as tech lead as the tech lead was from software engineer.&lt;/p&gt;
&lt;p&gt;The scope of work I was across had tripled and I had new product domains to understand. I needed to step away from the day to day coding I had spent my career learning and trust this responsibility to my former teammates.&lt;/p&gt;
&lt;p&gt;I was now responsible for supporting 15 software and QA engineers across the three teams. I needed to work closely with these people to understand their situations and help them define their own development paths.&lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;The challenges&lt;/h3&gt;
&lt;p&gt;Hiring had now become my responsibility. As I was transitioning out of my tech lead role, the first hire was to be my replacement for the team.&lt;/p&gt;
&lt;p&gt;However, in my first week as engineering manager, the tech lead in another team resigned and needed to be replaced more urgently. I soon found that hiring had become a significant proportion of my time.&lt;/p&gt;
&lt;p&gt;I was writing business case documents, reviewing position descriptions and resumes, and spending several hours each week with interviews. I was supported by a great HR team and was soon able to fill these positions and support the onboarding of the new tech leads into their teams and their products.&lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;The people challenges&lt;/h3&gt;
&lt;p&gt;The second challenge I faced shortly after taking the management role was around team dynamics and psychological safety. Just as I had to learn this, I also needed to explain and demonstrate it to my teams.&lt;/p&gt;
&lt;p&gt;In the team where the tech lead was soon departing, a new senior engineer wasn&#39;t listening to an established engineer who had been with us for several years and had deep knowledge of our systems. He was ignoring their code review suggestions and didn&#39;t seem to value her opinions. This was causing the established engineer enough anxiety to miss work and was hurting the team.&lt;/p&gt;
&lt;p&gt;It took some time to gather what was happening in the situation, speaking with each member of the team to understand their perspective. My approach to this situation was to ask the departing tech lead to defer to the established engineer when asked questions and to explain technical details, and to ask them to step in and facilitate the team&#39;s planning sessions.
My hope was that these steps would alter the team&#39;s dynamic so that the new engineer would see the experience and knowledge the established engineer had and bring more respect to the relationship.&lt;/p&gt;
&lt;p&gt;A few weeks later, when I was checking in, this established engineer told me that they no longer dreaded work and would now wake up each day excited to be working with their team.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Looking back now I can see that the opportunity to work with a knowledgeable and experienced mentor meant I had the tools to understand the limits of my skills and the gaps in my current role. I could see how to quickly adjust my behaviour to better support the team I was on.&lt;/p&gt;
&lt;p&gt;I was also able to see further ahead in my career and begin gaining knowledge and developing the skills that would support my transition from one role to the next. In preparing myself for those next steps, the challenges I faced did not seem as insurmountable as they once would have.&lt;/p&gt;
&lt;p&gt;With a mentor to meet with, I could ask that question.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;quot;What do I need to learn next?&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;h2&gt;Questions for reflection&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;How can we ensure we are providing the mentorship needed to build leaders within our organisations?&lt;/li&gt;
&lt;li&gt;How different is the management career from an individual contributor?&lt;/li&gt;
&lt;li&gt;How to discussing career and development aspirations regularly?&lt;/li&gt;
&lt;li&gt;How to best help build a learning pathway toward an individual&#39;s goals?&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;Slides&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://brd.mn/articles/mentors/mentors.pdf&quot;&gt;Download the slides for this presentation (PDF, 3.8mb)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        </content>
    </entry>
</feed>